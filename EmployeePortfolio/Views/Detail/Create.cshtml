@model EmployeePortfolio.Models.empInfo


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>empInfo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.empno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.empno, ViewBag.Dropdownlist as SelectList, new { onchange = "SelectedValue(this)" });*@
                <select name="empno">
                    @foreach (var item in ViewBag.Dropdownlist as SelectList)
                    {
                        <option value="@item.Value"> @item.Text</option>
                    }

                </select>

                @Html.ValidationMessageFor(model => model.empno, "", new { @class = "text-danger" })
            </div>l
        </div>
      
        <div class="form-group">
            @Html.LabelFor(model => model.empname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.empname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.empname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.projname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.skills, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.skills, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.alloc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.alloc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.alloc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.exper, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.exper, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.exper, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rmap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rmap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rmap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    function SelectedValue(data) {
        data = { "empno": data.value }
        $.ajax({
            type: "POST",
            url: "/Detail/Create",
            data: data,
            success: function (result) {
                alert(data.value);
            },
            dataType: "json"
        });


    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
